services:

  mongo:
    image: mongo
    container_name: mongodb
    ports:
      - 27017:27017
    restart: always
    logging:
      driver: none
    healthcheck:
      test:  echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  backend:
    build:
      dockerfile: backend/backend.Dockerfile
    container_name: backend
    environment:
      DB_ADDRESS: mongodb://mongo:27017/mestodb
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - 3001:3000
    healthcheck:
      interval: 10s
      timeout: 2s
      start_period: 15s
      retries: 5
      test: node healthcheck.js

  frontend-auth:
    build:
      dockerfile: frontend-auth/auth/frontend-auth.Dockerfile
    container_name: frontend-auth
    ports:
      - 8081:8081
    depends_on:
      backend:
        condition: service_healthy

  frontend-profile:
    build:
      dockerfile: frontend-profile/profile/frontend-profile.Dockerfile
    container_name: frontend-profile
    ports:
      - 8082:8082
    depends_on:
      backend:
        condition: service_healthy

  frontend-photo:
    build:
      dockerfile: frontend-photo/photo/frontend-photo.Dockerfile
    container_name: frontend-photo
    ports:
      - 8083:8083
    depends_on:
      backend:
        condition: service_healthy

  frontend-facade:
    build:
      dockerfile: frontend-facade/facade/frontend-facade.Dockerfile
    container_name: frontend-facade
    ports:
      - 8080:8080
    depends_on:
      backend:
        condition: service_healthy